{"version":3,"sources":["context.js","alldata.js","createaccount.js","deposit.js","home.js","login.js","withdraw.js","navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Route","route","NavLink","navlink","HashRouter","hashrouter","UserContext","React","createContext","Card","props","className","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","id","color","background","marginTop","AllData","useState","data","setData","ctx","useContext","useEffect","fetch","then","response","json","console","log","currentUser","email","map","user","name","password","balance","transactions","transaction","date","type","amount","CreateMsg","onClick","setShow","CreateForm","setName","setEmail","setPassword","placeholder","value","onChange","e","currentTarget","validate","url","a","res","disabled","CreateAccount","show","setStatus","field","label","length","setTimeout","Deposit","setBalance","setAmount","Number","alert","Home","src","alt","Login","JSON","parse","err","Withdraw","NavBar","to","App","Provider","users","padding","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f970f39a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { HashRouter as hashrouter, Route as route , NavLink as navlink} from 'react-router-dom';\r\n\r\nconst Route       = route;\r\nconst NavLink     = navlink;\r\nconst HashRouter  = hashrouter;\r\nconst UserContext = React.createContext(null);\r\n\r\nfunction Card(props){\r\n    function classes(){\r\n      const bg  = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\r\n      const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\r\n      return 'card mb-3 ' + bg + txt;\r\n    }\r\n  \r\n    return (\r\n      <div className={classes()} style={props.style? props.style : {maxWidth: \"18rem\"}}>\r\n        <div className=\"card-header\">{props.header}</div>\r\n        <div className=\"card-body\">\r\n          {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\r\n          {props.text && (<p className=\"card-text\">{props.text}</p>)}\r\n          {props.body}\r\n          {props.status && (<div id='createStatus' style={{color: 'red', background: 'white', marginTop: '10px'}}>{props.status}</div>)}\r\n        </div>\r\n      </div>      \r\n    );    \r\n}\r\n\r\nexport {Route, NavLink, HashRouter, UserContext, Card};","import React from 'react';\r\nimport {UserContext, Card} from './context';\r\n\r\n\r\nfunction AllData(){\r\n  const [data, setData] = React.useState([]);\r\n  const ctx = React.useContext(UserContext);    \r\n\r\n  React.useEffect(() => {\r\n        \r\n      // fetch all accounts from API\r\n      fetch('/account/all')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setData(data);                \r\n        });\r\n\r\n  }, []);\r\n  \r\n  return (\r\n    <Card\r\n      bgcolor = \"info\"\r\n      style = {{maxWidth: \"45rem\"}}\r\n      header = \"All data\"\r\n      title = {ctx.currentUser? \"Current user: \" + ctx.currentUser.email : \"\"}\r\n      body = {\r\n        <table className=\"table\">\r\n          <tbody>\r\n            {data.map((user) => \r\n              <>\r\n                <h5 className=\"text-white font-weight-bold\">{\"User: \" + user.email}</h5>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Name:</td>\r\n                  <td>{user.name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Email:</td>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Password:</td>\r\n                  <td>{user.password}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Balance:</td>\r\n                  <td>{user.balance}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Transactions:</td>\r\n                  <td>\r\n                    <table className=\"table\">\r\n                      <tbody>\r\n                        {user.transactions.map((transaction) =>\r\n                          <>\r\n                            <h5 className=\"text-white font-weight-bold\">{\"Date: \" + transaction.date}</h5>\r\n                            <tr>\r\n                              <td className=\"text-white font-weight-bold\">Type:</td>\r\n                              <td>{transaction.type}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-white font-weight-bold\">Amount:</td>\r\n                              <td>{transaction.amount}</td>\r\n                            </tr>\r\n                          </>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AllData;\r\n","import React from \"react\";\r\nimport {Card} from './context'\r\n\r\nfunction CreateAccount(){\r\n  const [show, setShow]         = React.useState(true);\r\n  const [status, setStatus]     = React.useState('');  \r\n\r\n  function validate(field, label){\r\n      if (!field) {\r\n        setStatus('Error: ' + label + ' is empty.');\r\n        setTimeout(() => setStatus(''),3000);\r\n        return false;\r\n      }\r\n\r\n      if(label === 'password' && field.length < 8) {\r\n        setStatus('Password must be at least 8 characters long.');\r\n        setTimeout(() => setStatus(''),3000);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n  } \r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Create Account\"\r\n      status={status}\r\n      body={show ? \r\n        <CreateForm setShow={setShow} validate={validate}/>:\r\n        <CreateMsg setShow={setShow}/>}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CreateMsg(props){\r\n  return (\r\n    <>\r\n    <h5>Success</h5>\r\n    <button type=\"submit\" className=\"btn btn-light\" onClick={() => props.setShow(true)}>Add another account</button>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction CreateForm(props){\r\n  const [name, setName]         = React.useState('');\r\n  const [email, setEmail]       = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  function clearForm(){\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  function handleCreate(){\r\n    console.log(name,email,password);\r\n    if (!props.validate(name,     'name'))     {/*alert('Name is empty.');                              */ return;}\r\n    if (!props.validate(email,    'email'))    {/*alert('Email is empty.');                             */ return;}\r\n    if (!props.validate(password, 'password')) {/*alert('Password must be at least 8 characters long.');*/ return;}\r\n\r\n    const url = `/account/create/${name}/${email}/${password}`;\r\n    (async () => {\r\n        var res  = await fetch(url);\r\n        var data = await res.json();    \r\n        console.log(data);        \r\n    })();\r\n    \r\n    props.setShow(false);\r\n    clearForm();\r\n  }   \r\n\r\n  return (  \r\n    <>\r\n    Name<br/>\r\n    <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name\" value={name} onChange={e => setName(e.currentTarget.value)} /><br/>\r\n    Email address<br/>\r\n    <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.currentTarget.value)}/><br/>\r\n    Password<br/>\r\n    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" value={password} onChange={e => setPassword(e.currentTarget.value)}/><br/>\r\n    <button type=\"submit\" className=\"btn btn-light\" onClick={handleCreate} disabled={(!name && !email && !password)}>Create Account</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAccount;","import React from \"react\";\r\nimport { UserContext, Card } from \"./context\";\r\n\r\nfunction Deposit(){\r\n  const ctx = React.useContext(UserContext);\r\n  const currentUser =  ctx.currentUser;\r\n  const [balance, setBalance] = React.useState(currentUser? currentUser.balance : null);\r\n  const [amount, setAmount] = React.useState('');\r\n  const [status, setStatus]     = React.useState('');\r\n\r\n  function validate(amount){\r\n    if(!Number(amount)) {\r\n      setStatus('Error: The amount must be a number.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n\r\n    if (amount <= 0) {\r\n      setStatus('Error: The amount must be positive.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clearForm(){\r\n    setAmount('');\r\n  }\r\n\r\n  function handleDeposit(){\r\n    if(!validate(amount)) return;\r\n    currentUser.balance += Number(amount);\r\n    setBalance(currentUser.balance);\r\n    //currentUser.transactions.push({date: Date(), type: \"deposit\", amount: Number(amount)});\r\n    \r\n\r\n    fetch(`/account/update/${currentUser.email}/${amount}`)\r\n      .then(response => console.log(response));\r\n\r\n    alert('Deposit was received successfully');\r\n    clearForm();\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor = \"success\"\r\n      header = \"Deposit\"\r\n      title = {\"Your Balance: \"+ (balance? balance : \"?\")}\r\n      status = {status}\r\n      body = {(\r\n        <> \r\n          Amount<br/>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter the amount\" value={amount} onChange={(e)=>{setAmount(e.currentTarget.value)}}/><br/>\r\n          <button type=\"submit\" disabled={!currentUser || !amount} className=\"btn btn-light\" onClick={handleDeposit}>Deposit amount</button>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Deposit;","import {Card} from './context'\r\n\r\nfunction Home(){\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"\r\n      header=\"BadBank Landing Module\"\r\n      title=\"Welcome to the bank\"\r\n      text=\"You can move around using the navigation bar.\"\r\n      body={(<img src=\"bank.png\" className=\"img-fluid\" alt=\"Responsive\"/>)}\r\n    />    \r\n  );  \r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport {UserContext, Card} from './context'\r\n\r\nfunction Login(){\r\n  const ctx = React.useContext(UserContext);\r\n  let currentUser =  ctx.currentUser;\r\n  const [show, setShow]         = React.useState(currentUser? false : true);\r\n  const [status, setStatus]     = React.useState('');\r\n  const [email, setEmail]       = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  function validate(field, label){\r\n    if (!field) {\r\n      setStatus('Error: ' + label);\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleLogin(){\r\n    console.log(email,password);\r\n    if (!validate(email,    'email'))    return;\r\n    if (!validate(password, 'password')) return;\r\n\r\n    fetch(`/account/login/${email}/${password}`)\r\n    .then(response => response.text())\r\n    .then(text => {\r\n        try {\r\n            const data = JSON.parse(text);\r\n            console.log('JSON:', data);\r\n            currentUser = data;\r\n            ctx.currentUser = currentUser;\r\n            setShow(false);\r\n        } catch(err) {\r\n            alert(text);\r\n            console.log('err:', text);\r\n        }\r\n    });\r\n  } \r\n\r\n  function clearForm(){\r\n    ctx.currentUser = null;\r\n    setEmail('');\r\n    setPassword('');\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"warning\"\r\n      header=\"Login\"\r\n      status={status}\r\n      body={show ? (  \r\n        <>\r\n        Email address<br/>\r\n        <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.currentTarget.value)}/><br/>\r\n        Password<br/>\r\n        <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" value={password} onChange={e => setPassword(e.currentTarget.value)}/><br/>\r\n        <button type=\"submit\" className=\"btn btn-light\" onClick={handleLogin}>Login</button>\r\n        </>\r\n      ):(\r\n        <>\r\n        <h5>Success</h5>\r\n        <p>Hello {currentUser.email}!</p>\r\n        <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Log out</button>\r\n        </>\r\n      )}\r\n    />\r\n  )  \r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { UserContext, Card } from \"./context\";\r\n\r\nfunction Withdraw(){\r\n  const ctx = React.useContext(UserContext);\r\n  const currentUser =  ctx.currentUser;\r\n  const [balance, setBalance] = React.useState(currentUser? currentUser.balance : null);\r\n  const [amount, setAmount] = React.useState('');\r\n  const [status, setStatus]     = React.useState('');\r\n\r\n  function validate(amount){\r\n    if(!Number(amount)) {\r\n      setStatus('Error: The amount must be a number.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n\r\n    if (amount <= 0) {\r\n      setStatus('Error: The amount must be positive.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n    \r\n    if(amount > currentUser.balance) {\r\n      setStatus('Error: The amount exceeds the balance.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function clearForm(){\r\n    setAmount('');\r\n  }\r\n\r\n  function handleWithdraw(){\r\n    if(!validate(amount)) return;\r\n    currentUser.balance -= Number(amount);\r\n    setBalance(currentUser.balance);\r\n    //currentUser.transactions.push({date: Date(), type: \"withdraw\", amount: Number(amount)});\r\n\r\n    fetch(`/account/update/${currentUser.email}/-${amount}`)\r\n      .then(response => console.log(response));\r\n\r\n    alert('Withdraw was processed successfully');\r\n    clearForm();\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor = \"secondary\"\r\n      header = \"Withdraw\"\r\n      title = {\"Your Balance: \"+ (balance? balance : \"?\")}\r\n      status = {status}\r\n      body = {(\r\n        <> \r\n          Amount<br/>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter the amount\" value={amount} onChange={(e)=>{setAmount(e.currentTarget.value)}}/><br/>\r\n          <button type=\"submit\" disabled={!currentUser || !amount} className=\"btn btn-light\" onClick={handleWithdraw}>Withdraw amount</button>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Withdraw;","import { NavLink } from \"./context\";\r\n\r\nfunction NavBar(){\r\n  return(\r\n    <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\" data-toggle=\"tooltip\" title=\"Main page\">BadBank</NavLink>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/CreateAccount/\" data-toggle=\"tooltip\" title=\"Create a new account\">Create Account</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/login/\" data-toggle=\"tooltip\" title=\"Log in with your account\">Login</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/deposit/\" data-toggle=\"tooltip\" title=\"Deposit money\">Deposit</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/withdraw/\" data-toggle=\"tooltip\" title=\"Withdraw money\">Withdraw</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/alldata/\" data-toggle=\"tooltip\" title=\"See all data\">AllData</NavLink>\r\n          </li>          \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","\n//import './App.css';\nimport AllData from './alldata'\nimport CreateAccount from './createaccount'\nimport Deposit from './deposit'\nimport Home from './home'\nimport Login from './login'\nimport Withdraw from './withdraw'\nimport NavBar from './navbar';\nimport {Route, HashRouter} from './context'\nimport {UserContext} from './context'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <NavBar/>\n      <UserContext.Provider value={{currentUser: null, users:[{name:'abel',email:'abel@mit.edu',password:'secret',balance:100, transactions: []}]}}>\n        <div className=\"container\" style={{padding: \"20px\"}}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/CreateAccount/\" component={CreateAccount} />\n          <Route path=\"/login/\" component={Login} />\n          <Route path=\"/deposit/\" component={Deposit} />\n          <Route path=\"/withdraw/\" component={Withdraw} />\n          <Route path=\"/alldata/\" component={AllData} />\n        </div>\n      </UserContext.Provider>      \n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}