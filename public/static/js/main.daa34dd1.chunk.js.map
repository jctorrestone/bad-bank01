{"version":3,"sources":["firebase-config.js","context.js","alldata.js","createaccount.js","deposit.js","home.js","login.js","withdraw.js","navbar.js","transfer.js","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Route","route","NavLink","navlink","HashRouter","hashrouter","UserContext","React","createContext","Card","props","className","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","id","color","background","marginTop","AllData","ctx","useContext","useState","currentUser","setCurrentUser","data","setData","useEffect","fetch","then","response","json","console","log","getAuth","onAuthStateChanged","firebaseUser","email","map","user","name","balance","transactions","transaction","date","type","amount","CreateMsg","onClick","setShow","CreateForm","history","useHistory","setName","setEmail","password","setPassword","placeholder","value","onChange","e","currentTarget","validate","auth","createUserWithEmailAndPassword","url","a","res","push","catch","message","alert","disabled","CreateAccount","show","setStatus","field","label","length","setTimeout","Deposit","setBalance","setAmount","Number","Home","src","alt","Login","signInWithEmailAndPassword","signOut","Withdraw","NavBar","to","Transfer","account","setAccount","App","JSON","parse","Provider","padding","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daa34dd1.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCERC-qkHyO74skFsmxJ-ppCTR3flSTIAo\",\r\n    authDomain: \"course-e4e07.firebaseapp.com\",\r\n    databaseURL: \"https://course-e4e07-default-rtdb.firebaseio.com\",\r\n    projectId: \"course-e4e07\",\r\n    storageBucket: \"course-e4e07.appspot.com\",\r\n    messagingSenderId: \"777909374565\",\r\n    appId: \"1:777909374565:web:0fbb6bfc911f4e25a5c08c\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default app;","import React from 'react';\r\nimport { HashRouter as hashrouter, Route as route , NavLink as navlink} from 'react-router-dom';\r\nimport app from './firebase-config';\r\n\r\nconst Route       = route;\r\nconst NavLink     = navlink;\r\nconst HashRouter  = hashrouter;\r\nconst UserContext = React.createContext(null);\r\n\r\nfunction Card(props){\r\n    function classes(){\r\n      const bg  = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\r\n      const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\r\n      return 'card mb-3 ' + bg + txt;\r\n    }\r\n  \r\n    return (\r\n      <div className={classes()} style={props.style? props.style : {maxWidth: \"18rem\"}}>\r\n        <div className=\"card-header\">{props.header}</div>\r\n        <div className=\"card-body\">\r\n          {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\r\n          {props.text && (<p className=\"card-text\">{props.text}</p>)}\r\n          {props.body}\r\n          {props.status && (<div id='createStatus' style={{color: 'red', background: 'white', marginTop: '10px'}}>{props.status}</div>)}\r\n        </div>\r\n      </div>      \r\n    );    \r\n}\r\n\r\nexport {Route, NavLink, HashRouter, UserContext, Card, app};","import React from 'react';\r\nimport { UserContext, Card } from './context';\r\nimport { getAuth } from 'firebase/auth'\r\n\r\nfunction AllData(){\r\n  const ctx = React.useContext(UserContext);    \r\n  const [currentUser, setCurrentUser] =  React.useState(ctx.currentUser);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n        \r\n      // fetch all accounts from API\r\n      fetch('/account/all')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setData(data);                \r\n        });\r\n\r\n  }, []);\r\n  \r\n  getAuth().onAuthStateChanged((firebaseUser) => {\r\n      setCurrentUser(ctx.currentUser);\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      bgcolor = \"info\"\r\n      style = {{maxWidth: \"45rem\"}}\r\n      header = \"All data\"\r\n      title = {currentUser? \"Current user: \" + currentUser.email : \"\"}\r\n      body = {\r\n        <table className=\"table\">\r\n          <tbody>\r\n            {data.map((user) => \r\n              <>\r\n                <h5 className=\"text-white font-weight-bold\">{\"User: \" + user.email}</h5>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Name:</td>\r\n                  <td>{user.name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Email:</td>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n                {/* <tr>\r\n                  <td className=\"text-white font-weight-bold\">Password:</td>\r\n                  <td>{user.password}</td>\r\n                </tr> */}\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Balance:</td>\r\n                  <td>{user.balance}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-white font-weight-bold\">Transactions:</td>\r\n                  <td>\r\n                    <table className=\"table\">\r\n                      <tbody>\r\n                        {user.transactions.map((transaction) =>\r\n                          <>\r\n                            <h5 className=\"text-white font-weight-bold\">{\"Date: \" + transaction.date}</h5>\r\n                            <tr>\r\n                              <td className=\"text-white font-weight-bold\">Type:</td>\r\n                              <td>{transaction.type}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"text-white font-weight-bold\">Amount:</td>\r\n                              <td>{transaction.amount}</td>\r\n                            </tr>\r\n                          </>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AllData;\r\n","import React from \"react\"\r\nimport { Card } from './context'\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nfunction CreateAccount(){\r\n  const [show, setShow]         = React.useState(true);\r\n  const [status, setStatus]     = React.useState('');  \r\n\r\n  function validate(field, label){\r\n      if (!field) {\r\n        setStatus('Error: ' + label + ' is empty.');\r\n        setTimeout(() => setStatus(''),3000);\r\n        return false;\r\n      }\r\n\r\n      if(label === 'password' && field.length < 8) {\r\n        setStatus('Password must be at least 8 characters long.');\r\n        setTimeout(() => setStatus(''),3000);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n  } \r\n\r\n  return getAuth().currentUser? (\r\n    <h1>LOG OUT, IF YOU WANT TO CREATE ANOTHER ACCOUNT!</h1>\r\n  ):(\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Create Account\"\r\n      status={status}\r\n      body={show ? \r\n        <CreateForm setShow={setShow} validate={validate}/>:\r\n        <CreateMsg setShow={setShow}/>}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CreateMsg(props){\r\n  return (\r\n    <>\r\n    <h5>Success</h5>\r\n    <button type=\"submit\" className=\"btn btn-light\" onClick={() => props.setShow(true)}>Add another account</button>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction CreateForm(props){\r\n  const history = useHistory();\r\n  const [name, setName]         = React.useState('');\r\n  const [email, setEmail]       = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  function clearForm(){\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  function handleCreate(){\r\n    console.log(name,email,password);\r\n    if (!props.validate(name,     'name'))     {/*alert('Name is empty.');                              */ return;}\r\n    if (!props.validate(email,    'email'))    {/*alert('Email is empty.');                             */ return;}\r\n    if (!props.validate(password, 'password')) {/*alert('Password must be at least 8 characters long.');*/ return;}\r\n\r\n    // const url = `/account/create/${name}/${email}/${password}`;\r\n    // (async () => {\r\n    //     var res  = await fetch(url);\r\n    //     var data = await res.json();    \r\n    //     console.log(data);        \r\n    // })();\r\n    \r\n    const auth = getAuth();\r\n    const promise = createUserWithEmailAndPassword(\r\n      auth,\r\n      email,\r\n      password\r\n    );\r\n    promise.then(() => {\r\n      props.setShow(false);\r\n      clearForm();\r\n\r\n      const url = `/account/create/${name}/${email}`;\r\n      (async () => {\r\n        var res  = await fetch(url);\r\n        var data = await res.json();    \r\n        console.log(data);        \r\n      })();\r\n    \r\n      history.push(\"/login\");\r\n    }).catch((e) => {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n    });\r\n  }   \r\n\r\n  return (  \r\n    <>\r\n    Name<br/>\r\n    <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name\" value={name} onChange={e => setName(e.currentTarget.value)} /><br/>\r\n    Email address<br/>\r\n    <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.currentTarget.value)}/><br/>\r\n    Password<br/>\r\n    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" value={password} onChange={e => setPassword(e.currentTarget.value)}/><br/>\r\n    <button type=\"submit\" className=\"btn btn-light\" onClick={handleCreate} disabled={(!name && !email && !password)}>Create Account</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAccount;","import React from \"react\"\r\nimport { UserContext, Card } from \"./context\"\r\nimport { getAuth } from 'firebase/auth'\r\n\r\nfunction Deposit(){\r\n  const ctx = React.useContext(UserContext);\r\n  const [currentUser, setCurrentUser] =  React.useState(ctx.currentUser);\r\n  const [balance, setBalance] = React.useState(currentUser? currentUser.balance : 0);\r\n  const [amount, setAmount] = React.useState('');\r\n  const [status, setStatus]     = React.useState('');\r\n\r\n  function validate(amount){\r\n    if(!Number(amount)) {\r\n      setStatus('Error: The amount must be a number.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n\r\n    if (amount <= 0) {\r\n      setStatus('Error: The amount must be positive.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clearForm(){\r\n    setAmount('');\r\n  }\r\n\r\n  function handleDeposit(){\r\n    if(!validate(amount)) return;\r\n    currentUser.balance += Number(amount);\r\n    setBalance(currentUser.balance);\r\n    \r\n\r\n    fetch(`/account/update/${currentUser.email}/${amount}`)\r\n      .then(response => console.log(response));\r\n\r\n    alert('Deposit was received successfully');\r\n    clearForm();\r\n  }\r\n\r\n  getAuth().onAuthStateChanged((firebaseUser) => {\r\n    if(firebaseUser && currentUser){\r\n      setBalance(currentUser.balance);\r\n    }\r\n    else{\r\n      setBalance(0);\r\n    }\r\n    setCurrentUser(ctx.currentUser);\r\n  });\r\n\r\n  return currentUser? (\r\n    <Card\r\n      bgcolor = \"success\"\r\n      header = \"Deposit\"\r\n      title = {\"Your Balance: \"+ (balance? balance : 0)}\r\n      status = {status}\r\n      body = {(\r\n        <> \r\n          Amount<br/>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter the amount\" value={amount} onChange={(e)=>{setAmount(e.currentTarget.value)}}/><br/>\r\n          <button type=\"submit\" disabled={!currentUser || !amount} className=\"btn btn-light\" onClick={handleDeposit}>Deposit amount</button>\r\n        </>\r\n      )}\r\n    />\r\n  ):(\r\n    <h1>YOU MUST LOG IN FIRST!</h1>\r\n  )\r\n}\r\n\r\nexport default Deposit;","import {Card} from './context'\r\n\r\nfunction Home(){\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"\r\n      header=\"BadBank Landing Module\"\r\n      title=\"Welcome to the bank\"\r\n      text=\"You can move around using the navigation bar.\"\r\n      body={(<img src=\"bank.png\" className=\"img-fluid\" alt=\"Responsive\"/>)}\r\n    />    \r\n  );  \r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { UserContext, Card} from './context'\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\r\n\r\nfunction Login(){\r\n  const ctx = React.useContext(UserContext);\r\n  const [currentUser, setCurrentUser] =  React.useState(ctx.currentUser);\r\n  const [show, setShow]         = React.useState(currentUser? false : true);\r\n  const [status, setStatus]     = React.useState('');\r\n  const [email, setEmail]       = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  function validate(field, label){\r\n    if (!field) {\r\n      setStatus('Error: ' + label);\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleLogin(){\r\n    console.log(email,password);\r\n    if (!validate(email,    'email'))    return;\r\n    if (!validate(password, 'password')) return;\r\n\r\n    // fetch(`/account/login/${email}/${password}`)\r\n    // .then(response => response.text())\r\n    // .then(text => {\r\n    //     try {\r\n    //         const data = JSON.parse(text);\r\n    //         console.log('JSON:', data);\r\n    //         currentUser = data;\r\n    //         ctx.currentUser = currentUser;\r\n    //         setShow(false);\r\n    //     } catch(err) {\r\n    //         alert(text);\r\n    //         console.log('err:', text);\r\n    //     }\r\n    // });\r\n\r\n    const auth = getAuth();\r\n    const promise = signInWithEmailAndPassword(\r\n      auth,\r\n      email,\r\n      password\r\n    );\r\n    promise.catch((e) => {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n    });\r\n\r\n  } \r\n\r\n  function clearForm(){\r\n    //ctx.currentUser = null;\r\n    getAuth().signOut();\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  getAuth().onAuthStateChanged((firebaseUser) => {\r\n    if(firebaseUser){\r\n      setShow(false);\r\n    }\r\n    else{\r\n      setShow(true);\r\n    }\r\n    setCurrentUser(ctx.currentUser);\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"warning\"\r\n      header=\"Login\"\r\n      status={status}\r\n      body={show ? (  \r\n        <>\r\n        Email address<br/>\r\n        <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.currentTarget.value)}/><br/>\r\n        Password<br/>\r\n        <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" value={password} onChange={e => setPassword(e.currentTarget.value)}/><br/>\r\n        <button type=\"submit\" className=\"btn btn-light\" onClick={handleLogin}>Login</button>\r\n        </>\r\n      ):(\r\n        <>\r\n        <h5>Success</h5>\r\n        <p>Hello {currentUser? currentUser.email:\"\"}!</p>\r\n        <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Log out</button>\r\n        </>\r\n      )}\r\n    />\r\n  )  \r\n}\r\n\r\nexport default Login;","import React from \"react\"\r\nimport { UserContext, Card } from \"./context\"\r\nimport { getAuth } from 'firebase/auth'\r\n\r\nfunction Withdraw(){\r\n  const ctx = React.useContext(UserContext);\r\n  const [currentUser, setCurrentUser] =  React.useState(ctx.currentUser);\r\n  const [balance, setBalance] = React.useState(currentUser? currentUser.balance : 0);\r\n  const [amount, setAmount] = React.useState('');\r\n  const [status, setStatus]     = React.useState('');\r\n\r\n  function validate(amount){\r\n    if(!Number(amount)) {\r\n      setStatus('Error: The amount must be a number.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n\r\n    if (amount <= 0) {\r\n      setStatus('Error: The amount must be positive.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n    \r\n    if(amount > currentUser.balance) {\r\n      setStatus('Error: The amount exceeds the balance.');\r\n      setTimeout(() => setStatus(''),3000);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function clearForm(){\r\n    setAmount('');\r\n  }\r\n\r\n  function handleWithdraw(){\r\n    if(!validate(amount)) return;\r\n    currentUser.balance -= Number(amount);\r\n    setBalance(currentUser.balance);\r\n\r\n    fetch(`/account/update/${currentUser.email}/-${amount}`)\r\n      .then(response => console.log(response));\r\n\r\n    alert('Withdraw was processed successfully');\r\n    clearForm();\r\n  }\r\n\r\n  getAuth().onAuthStateChanged((firebaseUser) => {\r\n    if(firebaseUser && currentUser){\r\n      setBalance(currentUser.balance);\r\n    }\r\n    else{\r\n      setBalance(0);\r\n    }\r\n    setCurrentUser(ctx.currentUser);\r\n  });\r\n\r\n  return currentUser? (\r\n    <Card\r\n      bgcolor = \"secondary\"\r\n      header = \"Withdraw\"\r\n      title = {\"Your Balance: \"+ (balance? balance : 0)}\r\n      status = {status}\r\n      body = {(\r\n        <> \r\n          Amount<br/>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter the amount\" value={amount} onChange={(e)=>{setAmount(e.currentTarget.value)}}/><br/>\r\n          <button type=\"submit\" disabled={!currentUser || !amount} className=\"btn btn-light\" onClick={handleWithdraw}>Withdraw amount</button>\r\n        </>\r\n      )}\r\n    />\r\n  ):(\r\n    <h1>YOU MUST LOG IN FIRST!</h1>\r\n  )\r\n}\r\n\r\nexport default Withdraw;","import './navbar.css'\r\nimport React from 'react'\r\nimport { UserContext, NavLink } from \"./context\"\r\nimport { getAuth } from 'firebase/auth'\r\n\r\nfunction NavBar(){\r\n  const ctx = React.useContext(UserContext);\r\n  const [currentUser, setCurrentUser] =  React.useState(ctx.currentUser);\r\n\r\n  getAuth().onAuthStateChanged((firebaseUser) => {\r\n    setCurrentUser(ctx.currentUser);\r\n  });\r\n\r\n  return(\r\n    <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\" data-toggle=\"tooltip\" title=\"Main page\">BadBank</NavLink>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        {\r\n          currentUser &&\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/deposit/\" data-toggle=\"tooltip\" title=\"Deposit money\">Deposit</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/withdraw/\" data-toggle=\"tooltip\" title=\"Withdraw money\">Withdraw</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/transfer/\" data-toggle=\"tooltip\" title=\"transfer money\">Transfer</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/alldata/\" data-toggle=\"tooltip\" title=\"See all data\">AllData</NavLink>\r\n            </li>          \r\n          </ul>\r\n        }\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          {\r\n            !currentUser &&\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/CreateAccount/\" data-toggle=\"tooltip\" title=\"Create a new account\">Create Account</NavLink>\r\n            </li>\r\n          }\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/login/\" data-toggle=\"tooltip\" title=\"Log in with your account\">{currentUser? \"Logout\":\"Login\"}</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\"\r\nimport { UserContext, Card } from \"./context\"\r\nimport { getAuth } from 'firebase/auth'\r\n\r\nfunction Transfer (){\r\n    const ctx = React.useContext(UserContext);\r\n    const [currentUser, setCurrentUser] =  React.useState(ctx.currentUser);\r\n    const [balance, setBalance] = React.useState(currentUser? currentUser.balance : 0);\r\n    const [account, setAccount] = React.useState('');\r\n    const [amount, setAmount] = React.useState('');\r\n    const [status, setStatus]     = React.useState('');\r\n\r\n    function validate(amount){\r\n        if(!Number(amount)) {\r\n          setStatus('Error: The amount must be a number.');\r\n          setTimeout(() => setStatus(''),3000);\r\n          return false;\r\n        }\r\n    \r\n        if (amount <= 0) {\r\n          setStatus('Error: The amount must be positive.');\r\n          setTimeout(() => setStatus(''),3000);\r\n          return false;\r\n        }\r\n\r\n        if(amount > currentUser.balance) {\r\n            setStatus('Error: The amount exceeds the balance.');\r\n            setTimeout(() => setStatus(''),3000);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n    \r\n    function clearForm(){\r\n        setAccount('');\r\n        setAmount('');\r\n    }\r\n    \r\n    function handleTransfer(){\r\n        if(!validate(amount)) return;\r\n\r\n        fetch(`/account/transfer/${currentUser.email}/${account}/${amount}`)\r\n        .then(response => {\r\n            console.log(response.status);\r\n            if(response.status !== 200){\r\n                alert('User not found');\r\n                return;\r\n            }\r\n            currentUser.balance -= Number(amount);\r\n            setBalance(currentUser.balance);\r\n            alert('Transfer was processed successfully');\r\n        })\r\n\r\n        clearForm();\r\n    }\r\n\r\n    getAuth().onAuthStateChanged((firebaseUser) => {\r\n      if(firebaseUser && currentUser){\r\n        setBalance(currentUser.balance);\r\n      }\r\n      else{\r\n        setBalance(0);\r\n      }\r\n      setCurrentUser(ctx.currentUser);\r\n    });\r\n\r\n    return currentUser? (\r\n        <Card\r\n          bgcolor = \"dark\"\r\n          header = \"Transfer\"\r\n          title = {\"Your Balance: \"+ (balance? balance : 0)}\r\n          status = {status}\r\n          body = {(\r\n            <>\r\n              Account Number<br/>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Enter the account number\" value={account} onChange={(e)=>{setAccount(e.currentTarget.value)}}/><br/> \r\n              Amount<br/>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Enter the amount\" value={amount} onChange={(e)=>{setAmount(e.currentTarget.value)}}/><br/>\r\n              <button type=\"submit\" disabled={!currentUser || !amount} className=\"btn btn-light\" onClick={handleTransfer}>Transfer amount</button>\r\n            </>\r\n          )}\r\n        />\r\n    ):(\r\n      <h1>YOU MUST LOG IN FIRST!</h1>\r\n    )\r\n}\r\n\r\nexport default Transfer;","import AllData from './alldata'\nimport CreateAccount from './createaccount'\nimport Deposit from './deposit'\nimport Home from './home'\nimport Login from './login'\nimport Withdraw from './withdraw'\nimport NavBar from './navbar'\nimport Transfer from './transfer'\nimport {Route, HashRouter, UserContext} from './context'\nimport React from 'react'\nimport {getAuth} from 'firebase/auth'\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = React.useState(null);\n\n  React.useEffect(() => {\n    getAuth().onAuthStateChanged((firebaseUser) => {\n      if(firebaseUser){\n        fetch(`/account/findOne/${firebaseUser.email}`)\n          .then(response => response.text())\n          .then(text => {\n            const data = JSON.parse(text);\n            console.log(data);\n            setCurrentUser(data);\n          });\n      }\n      else{\n        setCurrentUser(null)\n      }\n    });\n  }, []);\n\n  return (\n    <HashRouter>\n      <UserContext.Provider value={{currentUser: currentUser}}>\n        <NavBar/>\n        <div className=\"container\" style={{padding: \"20px\"}}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/CreateAccount/\" component={CreateAccount} />\n          <Route path=\"/login/\" component={Login} />\n          <Route path=\"/deposit/\" component={Deposit} />\n          <Route path=\"/withdraw/\" component={Withdraw} />\n          <Route path=\"/transfer/\" component={Transfer} />\n          <Route path=\"/alldata/\" component={AllData} />\n        </div>\n      </UserContext.Provider>      \n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}